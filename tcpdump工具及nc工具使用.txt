在s281上监听gm那台机器的连接封包:
tcpdump -i eth1 -n -nn -X -s 0 'port 8002' | grep -A 7 -B 7  '10.142.0.41'

直接在40.18上的监听:
tcpdump -i eth0 -X -s 0  -nn 'port 20000'

-s 0的作用是显示全部的内容

nc(netcat)命令使用过程:
1.
在40.18上执行：
nc -l 192.168.40.18 20000
然后在40.16上执行:
nc 192.168.40.18 20000
输入内容后Ctrl+D可以结束输入

未验证：nc -l -u ip port是监听udp端口

2.
在gm机器上直接执行
netcat 10.204.169.61 8002
由于s281(10.204.169.61)的机器socket本来就启动8002端口进行监听
故可以直接看出是否8002端口是否提供服务.(通过tcpdump来看)

3.
查看icmp包：
tcpdump -n -i eth0 icmp 

tcpdump中加入-n参数可以减少被drop by kernel的包数目,(-n减少了地址反向解析)其实这里的kernel是指tcpdump的内核，不是linux的内核
详见文章:tcpdump丢包问题解决方法
另外被证明已经成功运行的命令:192.168.40.18上面执行tcpdump -e -n -X -s 0 -i eth0  | grep -A 5 '192.168.40.16.46827'或者
tcpdump -i eth0 -n -X -s 0  -nn 'port 4665 and src host 192.168.40.16' 而40.16上执行的是nc 192.168.40.18 4665
或者这样可以指定和某个固定的主机通信:tcpdump -i eth0 -n -X -s 0  -nn 'port 6000 and (src host 192.168.40.16 or dst host 192.168.40.16)'
